//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/jonasstjerne/Documents/Privat/Repos/NerdyNode/NerdyNode/NerdyNode/grammar/NerdyNodeParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="NerdyNodeParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface INerdyNodeParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] NerdyNodeParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] NerdyNodeParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] NerdyNodeParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.forstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForstmt([NotNull] NerdyNodeParser.ForstmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.ifstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfstmt([NotNull] NerdyNodeParser.IfstmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] NerdyNodeParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] NerdyNodeParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] NerdyNodeParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] NerdyNodeParser.ExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] NerdyNodeParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBool([NotNull] NerdyNodeParser.BoolContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitList([NotNull] NerdyNodeParser.ListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.numop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumop([NotNull] NerdyNodeParser.NumopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.boolop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolop([NotNull] NerdyNodeParser.BoolopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.graph"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGraph([NotNull] NerdyNodeParser.GraphContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.nodeset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNodeset([NotNull] NerdyNodeParser.NodesetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.edgeset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEdgeset([NotNull] NerdyNodeParser.EdgesetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="NerdyNodeParser.identlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentlist([NotNull] NerdyNodeParser.IdentlistContext context);
}
